@page "/TrainerVerifyAdminCode"
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg">
                <div class="card-body">
                    <h3 class="card-title text-center">Verify Admin Code</h3>

                    <EditForm Model="@verifyAdminCodeModel" OnValidSubmit="HandleVerifyAdminCode">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="mb-3">
                            <label for="username" class="form-label">Username:</label>
                            <InputText id="username" class="form-control" @bind-Value="verifyAdminCodeModel.Username" />
                        </div>

                        <div class="mb-3">
                            <label for="code" class="form-label">Admin Verification Code:</label>
                            <InputText id="code" class="form-control" @bind-Value="verifyAdminCodeModel.Code" />
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Verify Admin Code</button>
                    </EditForm>

                    @if (!string.IsNullOrEmpty(verificationMessage))
                    {
                        <div class="alert alert-info mt-3">
                            <p>@verificationMessage</p>
                        </div>

                        @if (isVerified)
                        {
                            <button class="btn btn-success w-100 mt-2" @onclick="RedirectToLogin">Go to Login Page</button>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private VerifyAdminCodeDto verifyAdminCodeModel = new VerifyAdminCodeDto();
    private string verificationMessage;
    private bool isVerified = false;

    private async Task HandleVerifyAdminCode()
    {
        var response = await Http.PostAsJsonAsync("http://localhost:5210/api/Trainer/verify-admin-code", verifyAdminCodeModel);
        if (response.IsSuccessStatusCode)
        {
            verificationMessage = "Admin verification successful. You have registered successfully!";
            isVerified = true; // Set the flag to show the login button
        }
        else
        {
            verificationMessage = "Invalid admin verification code. Please try again.";
        }
    }

    private void RedirectToLogin()
    {
        // Navigate to the login page
        Navigation.NavigateTo("/TrainerLogin");
    }

    public class VerifyAdminCodeDto
    {
        public string Username { get; set; }
        public string Code { get; set; }
    }
}
