@page "/Traineeregister"
@inject HttpClient Http
@inject NavigationManager Navigation
@using QuestionBankClient.Model

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg border-0" style="border-radius: 1rem; animation: fadeIn 1.5s ease;">
                <div class="card-body">
                    @if (isRegistered)
                    {
                        <div class="alert alert-success text-center">
                            <p>You have been registered successfully!</p>
                            <p>Please enable two-factor authentication to secure your account.</p>
                            <button class="btn btn-primary" @onclick="NavigateToEnable2FA">Enable 2FA</button>
                        </div>
                    }
                    else
                    {
                        <h3 class="card-title text-center mb-4" style="color: #007bff;">
                            <i class="fas fa-user-plus"></i> Trainee Registration
                        </h3>

                        <EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <div class="mb-3">
                                <label for="username" class="form-label">
                                    <i class="fas fa-user"></i> Username:
                                </label>
                                <InputText id="username" class="form-control" placeholder="Enter your username" @bind-Value="registerModel.Username" />
                            </div>
                            <div class="mb-3">
                                <label for="email" class="form-label">
                                    <i class="fas fa-envelope"></i> Email:
                                </label>
                                <InputText id="email" class="form-control" placeholder="Enter your email" @bind-Value="registerModel.Email" />
                            </div>
                            <div class="mb-3">
                                <label for="password" class="form-label">
                                    <i class="fas fa-lock"></i> Password:
                                </label>
                                <InputText id="password" class="form-control" placeholder="Enter your password" type="password" @bind-Value="registerModel.Password" />
                            </div>
                            <div class="mb-3">
                                <label for="confirmPassword" class="form-label">
                                    <i class="fas fa-lock"></i> Confirm Password:
                                </label>
                                <InputText id="confirmPassword" class="form-control" placeholder="Confirm your password" type="password" @bind-Value="registerModel.ConfirmPassword" />
                            </div>
                            <button type="submit" class="btn btn-primary w-100" style="border-radius: 2rem;">
                                <i class="fas fa-user-plus"></i> Register
                            </button>
                        </EditForm>

                        <div class="mt-3 text-center">
                            <p>Already have an account?</p>
                            <button class="btn btn-secondary" @onclick="NavigateToLogin" style="border-radius: 2rem;">
                                <i class="fas fa-sign-in-alt"></i> Login
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

@code {
    private RegisterDto registerModel = new RegisterDto();
    private bool isRegistered = false;

    private async Task HandleRegister()
    {
        var response = await Http.PostAsJsonAsync("api/Trainee/register", registerModel);
        if (response.IsSuccessStatusCode)
        {
            isRegistered = true;
        }
        else
        {
            // Handle error
        }
    }

    private void NavigateToEnable2FA()
    {
        Navigation.NavigateTo("/Traineeenable-2fa");
    }

    private void NavigateToLogin()
    {
        Navigation.NavigateTo("/Traineelogin");
    }
}