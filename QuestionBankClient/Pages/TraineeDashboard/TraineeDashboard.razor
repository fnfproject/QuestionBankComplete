@page "/Traineedashboard/{Id:int}"
@using BlazorTrainee.Dtos
@inject HttpClient Http
@inject NavigationManager Navigation

@code {
    [Parameter]
    public int Id { get; set; }

    private List<TestResultDto> testResults = new List<TestResultDto>();
    private int progress = 0;

    protected override async Task OnInitializedAsync()
    {
        // Fetch the TestResult data from the API
        testResults = await Http.GetFromJsonAsync<List<TestResultDto>>($"http://localhost:18360/api/Shuffle/TestResults/{Id}");

        // Calculate the average score
        if (testResults.Any())
        {
            var validScores = testResults.Where(t => t.Score.HasValue).Select(t => t.Score.Value).ToList();
            if (validScores.Any())
            {
                progress = (int)validScores.Average();
            }
        }
    }
}

<!-- Bootstrap CSS -->
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
</head>

<div class="container">
    <h3 class="text-center my-4 fade-in">Dashboard</h3>

    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8">
            <!-- Live Tests -->
            <div class="card mb-4 fade-in shadow-lg">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0"><i class="bi bi-list-check me-2"></i>Live Tests</h4>
                </div>
                <ul class="list-group list-group-flush">
                    @for (int i = 1; i <= 3; i++)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center list-group-item-action">
                            <a href="/test/@i" class="text-decoration-none text-dark">
                                <i class="bi bi-box-arrow-right me-2"></i>Test @i
                            </a>
                            <button class="btn btn-sm btn-outline-primary">Start</button>
                        </li>
                    }
                </ul>
            </div>

            <!-- Practice Paper Questions -->
            <div class="card mb-4 fade-in shadow-lg">
                <div class="card-header bg-secondary text-white">
                    <h4 class="mb-0"><i class="bi bi-journal-text me-2"></i>Practice Questions</h4>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item d-flex justify-content-between align-items-center list-group-item-action">
                        <span class="text-dark">
                            <i class="bi bi-file-earmark-text me-2"></i>C# Basics
                        </span>
                        <a href="/Practicepaper1" class="btn btn-sm btn-outline-secondary">View</a>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center list-group-item-action">
                        <span class="text-dark">
                            <i class="bi bi-file-earmark-text me-2"></i>.NET Core
                        </span>
                        <a href="/Practicepaper2" class="btn btn-sm btn-outline-secondary">View</a>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center list-group-item-action">
                        <span class="text-dark">
                            <i class="bi bi-file-earmark-text me-2"></i>Angular
                        </span>
                        <a href="/Practicepaper3" class="btn btn-sm btn-outline-secondary">View</a>
                    </li>
                </ul>
            </div>

            <!-- Previous Test Results -->
            <div class="card mb-4 fade-in shadow-lg">
                <div class="card-header bg-light text-dark">
                    <h4 class="mb-0"><i class="bi bi-award me-2"></i>Previous Test Results</h4>
                </div>
                <div class="card-body p-0">
                    <table class="table table-hover table-striped mb-0">
                        <thead class="table-light">
                            <tr>
                                <th scope="col">Status</th>
                                <th scope="col">Score</th>
                                <th scope="col">Date of Completion</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (testResults.Count == 0)
                            {
                                <tr>
                                    <td colspan="3" class="text-center">No results found</td>
                                </tr>
                            }
                            else
                            {
                                @foreach (var result in testResults)
                                {
                                    <tr class="table-row">
                                        <td>@result.Status</td>
                                        <td>@(result.Score.HasValue ? $"{result.Score.Value}" : "N/A")</td>
                                        <td>@result.CreatedAt.ToShortDateString()</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Sidebar: Trainee Progress -->
        <div class="col-lg-4">
            <div class="card mb-4 fade-in shadow-lg">
                <div class="card-header bg-info text-white">
                    <h4 class="mb-0"><i class="bi bi-bar-chart-line me-2"></i>Trainee Progress</h4>
                </div>
                <div class="card-body d-flex justify-content-center align-items-center">
                    <div class="progress-circle" style="--progress:@progress;">
                        <div class="progress-circle-inner">
                            <span>@progress%</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .table-row:hover {
        background-color: #f8f9fa;
        cursor: pointer;
    }

    .fade-in {
        animation: fadeIn 1s ease-in-out;
    }

    @@keyframes fadeIn {
        0% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }

    /* Circular Progress Bar Styles */
    .progress-circle {
        --progress-color: #28a745;
        width: 150px;
        height: 150px;
        border-radius: 50%;
        background: conic-gradient(var(--progress-color) calc(var(--progress) * 1%), #e9ecef 0);
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: background 1s ease-out;
        animation: fillProgress 2s ease-out forwards;
    }

    .progress-circle-inner {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        background-color: #fff;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 24px;
        font-weight: bold;
        color: var(--progress-color);
    }

    @@keyframes fillProgress {
        from {
            background: conic-gradient(var(--progress-color) 0%, #e9ecef 0);
        }

        to {
            background: conic-gradient(var(--progress-color) calc(var(--progress) * 1%), #e9ecef 0);
        }
    }
</style>

